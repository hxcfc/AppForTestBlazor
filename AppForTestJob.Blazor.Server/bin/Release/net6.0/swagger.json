{
  "swagger": "2.0",
  "info": {
    "title": "MySolution API",
    "description": "Use AddXafWebApi(Configuration, options) in the MySolution.Blazor.Server\\Startup.cs file to make Business Objects available in the Web API.",
    "version": "v1"
  },
  "paths": {
    "/api/Localization/ActionCaption": {
      "get": {
        "tags": [
          "Localization"
        ],
        "summary": "Gets the specified Action's caption localized according to the specified language or current browser language settings.",
        "parameters": [
          {
            "in": "query",
            "name": "actionName",
            "description": "The identifier of the Action. You can find this identifier in the <b>Id</b> property of the Model Editor's <b>Actions | &lt;ActionName&gt;</b> node.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The localization language - for example, 'en' or 'de-DE'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Localization/ClassCaption": {
      "get": {
        "tags": [
          "Localization"
        ],
        "summary": "Gets the specified business class caption localized according to the specified language or current browser language settings.",
        "parameters": [
          {
            "in": "query",
            "name": "classFullName",
            "description": "The fully-qualified name of the business class. You can find this name in the <b>Name</b> property of the Model Editor's <b>BOModel | &lt;Class&gt;</b> node.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The localization language - for example, 'en' or 'de-DE'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Localization/MemberCaption": {
      "get": {
        "tags": [
          "Localization"
        ],
        "summary": "Gets the specified member's caption localized according to the specified language or current browser language settings.",
        "parameters": [
          {
            "in": "query",
            "name": "classFullName",
            "description": "The fully-qualified name of the business class that contains the target member. You can find this name in the <b>Name</b> property of the Model Editor's <b>BOModel | &lt;Class&gt;</b> node.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "memberName",
            "description": " The name of the member. You can find this name in the <b>Name</b> property of the Model Editor's <b>BOModel | &lt;Class&gt; | OwnMembers | &lt;Member&gt;</b> node.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The localization language - for example, 'en' or 'de-DE'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Localization/LocalizedText": {
      "get": {
        "tags": [
          "Localization"
        ],
        "summary": "Gets the specified localization item's value according to the specified language or current browser language settings.",
        "description": "For more information, refer to the following method description: <a href='https://docs.devexpress.com/eXpressAppFramework/DevExpress.ExpressApp.Utils.CaptionHelper.GetLocalizedText(System.String-System.String)'>CaptionHelper.GetLocalizedText(String, String)</a>.",
        "parameters": [
          {
            "in": "query",
            "name": "groupPath",
            "description": "The name of the localization group that contains the target localization item. You can find this path in the <b>Name</b> property of the Model Editor's <b>Localization | &lt;LocalizationGroup&gt;</b> node.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "itemName",
            "description": "The name of the localization item. You can find this name in the <b>Name</b> property of the Model Editor's <b>Localization | &lt;LocalizationGroup&gt; | &lt;LocalizationItem&gt;</b> node.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The localization language - for example, 'en' or 'de-DE'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Localization/Statistics": {
      "get": {
        "tags": [
          "Localization"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The localization language - for example, 'en' or 'de-DE'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Localization/Reset": {
      "get": {
        "tags": [
          "Localization"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The localization language - for example, 'en' or 'de-DE'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MediaFiles/DownloadStream": {
      "get": {
        "tags": [
          "MediaFiles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "objectType",
            "type": "string"
          },
          {
            "in": "query",
            "name": "objectKey",
            "type": "string"
          },
          {
            "in": "query",
            "name": "propertyName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/odata/$metadata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "api/odata/$metadata",
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "text/plain",
          "application/octet-stream",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IEdmModel"
            }
          }
        }
      }
    },
    "/api/odata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "api/odata/",
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "text/plain",
          "application/octet-stream",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ODataServiceDocument"
            }
          }
        }
      }
    },
    "/api/search/nip/{nip}": {
      "get": {
        "tags": [
          "nip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nip",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/search/nips/{nips}": {
      "get": {
        "tags": [
          "nips"
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "text/plain",
          "application/octet-stream",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nips",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entity"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountNumber": {
      "type": "object",
      "properties": {
        "accountNumberId": {
          "format": "int32",
          "type": "integer"
        },
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "number": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        }
      }
    },
    "AuthorizedClerk": {
      "type": "object",
      "properties": {
        "authorizedClerkId": {
          "format": "int32",
          "type": "integer"
        },
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "entityPersonId": {
          "format": "int32",
          "type": "integer"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "entityPerson": {
          "$ref": "#/definitions/EntityPerson"
        }
      }
    },
    "EdmContainerElementKind": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "EdmExpressionKind": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "type": "integer"
    },
    "EdmSchemaElementKind": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "EdmTypeKind": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "type": "integer"
    },
    "Entity": {
      "type": "object",
      "properties": {
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "nip": {
          "type": "string"
        },
        "statusVat": {
          "type": "string"
        },
        "regon": {
          "type": "string"
        },
        "peselId": {
          "format": "int32",
          "type": "integer"
        },
        "krs": {
          "type": "string"
        },
        "residenceAddress": {
          "type": "string"
        },
        "workingAddress": {
          "type": "string"
        },
        "registrationLegalDate": {
          "format": "date-time",
          "type": "string"
        },
        "registrationDenialDate": {
          "format": "date-time",
          "type": "string"
        },
        "registrationDenialBasis": {
          "type": "string"
        },
        "restorationDate": {
          "format": "date-time",
          "type": "string"
        },
        "restorationBasis": {
          "type": "string"
        },
        "removalDate": {
          "format": "date-time",
          "type": "string"
        },
        "removalBasis": {
          "type": "string"
        },
        "hasVirtualAccounts": {
          "type": "boolean"
        },
        "pesel": {
          "$ref": "#/definitions/Pesel"
        },
        "accountNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountNumber"
          }
        },
        "authorizedClerks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedClerk"
          }
        },
        "partners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Partner"
          }
        },
        "representatives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Representative"
          }
        }
      }
    },
    "EntityPerson": {
      "type": "object",
      "properties": {
        "entityPersonId": {
          "format": "int32",
          "type": "integer"
        },
        "companyName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "nip": {
          "type": "string"
        },
        "pesel": {
          "$ref": "#/definitions/Pesel"
        },
        "authorizedClerks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedClerk"
          }
        },
        "partners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Partner"
          }
        },
        "representatives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Representative"
          }
        }
      }
    },
    "IEdmDirectValueAnnotationsManager": {
      "type": "object"
    },
    "IEdmEntityContainer": {
      "type": "object",
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmEntityContainerElement"
          },
          "readOnly": true
        },
        "schemaElementKind": {
          "$ref": "#/definitions/EdmSchemaElementKind"
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmEntityContainerElement": {
      "type": "object",
      "properties": {
        "containerElementKind": {
          "$ref": "#/definitions/EdmContainerElementKind"
        },
        "container": {
          "$ref": "#/definitions/IEdmEntityContainer"
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmExpression": {
      "type": "object",
      "properties": {
        "expressionKind": {
          "$ref": "#/definitions/EdmExpressionKind"
        }
      }
    },
    "IEdmModel": {
      "type": "object",
      "properties": {
        "schemaElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmSchemaElement"
          },
          "readOnly": true
        },
        "vocabularyAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmVocabularyAnnotation"
          },
          "readOnly": true
        },
        "referencedModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmModel"
          },
          "readOnly": true
        },
        "declaredNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "directValueAnnotationsManager": {
          "$ref": "#/definitions/IEdmDirectValueAnnotationsManager"
        },
        "entityContainer": {
          "$ref": "#/definitions/IEdmEntityContainer"
        }
      }
    },
    "IEdmSchemaElement": {
      "type": "object",
      "properties": {
        "schemaElementKind": {
          "$ref": "#/definitions/EdmSchemaElementKind"
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmTerm": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/IEdmTypeReference"
        },
        "appliesTo": {
          "type": "string",
          "readOnly": true
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true
        },
        "schemaElementKind": {
          "$ref": "#/definitions/EdmSchemaElementKind"
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmType": {
      "type": "object",
      "properties": {
        "typeKind": {
          "$ref": "#/definitions/EdmTypeKind"
        }
      }
    },
    "IEdmTypeReference": {
      "type": "object",
      "properties": {
        "isNullable": {
          "type": "boolean",
          "readOnly": true
        },
        "definition": {
          "$ref": "#/definitions/IEdmType"
        }
      }
    },
    "IEdmVocabularyAnnotatable": {
      "type": "object"
    },
    "IEdmVocabularyAnnotation": {
      "type": "object",
      "properties": {
        "qualifier": {
          "type": "string",
          "readOnly": true
        },
        "term": {
          "$ref": "#/definitions/IEdmTerm"
        },
        "target": {
          "$ref": "#/definitions/IEdmVocabularyAnnotatable"
        },
        "value": {
          "$ref": "#/definitions/IEdmExpression"
        }
      }
    },
    "ODataEntitySetInfo": {
      "type": "object",
      "properties": {
        "typeAnnotation": {
          "$ref": "#/definitions/ODataTypeAnnotation"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ODataFunctionImportInfo": {
      "type": "object",
      "properties": {
        "typeAnnotation": {
          "$ref": "#/definitions/ODataTypeAnnotation"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ODataServiceDocument": {
      "type": "object",
      "properties": {
        "typeAnnotation": {
          "$ref": "#/definitions/ODataTypeAnnotation"
        },
        "entitySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataEntitySetInfo"
          }
        },
        "singletons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataSingletonInfo"
          }
        },
        "functionImports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataFunctionImportInfo"
          }
        }
      }
    },
    "ODataSingletonInfo": {
      "type": "object",
      "properties": {
        "typeAnnotation": {
          "$ref": "#/definitions/ODataTypeAnnotation"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ODataTypeAnnotation": {
      "type": "object",
      "properties": {
        "typeName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Partner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "format": "int32",
          "type": "integer"
        },
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "entityPersonId": {
          "format": "int32",
          "type": "integer"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "entityPerson": {
          "$ref": "#/definitions/EntityPerson"
        }
      }
    },
    "Pesel": {
      "type": "object",
      "properties": {
        "peselId": {
          "format": "int32",
          "type": "integer"
        },
        "number": {
          "type": "string"
        },
        "peselNavigation": {
          "$ref": "#/definitions/EntityPerson"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      }
    },
    "Representative": {
      "type": "object",
      "properties": {
        "representativeId": {
          "format": "int32",
          "type": "integer"
        },
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "entityPersonId": {
          "format": "int32",
          "type": "integer"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "entityPerson": {
          "$ref": "#/definitions/EntityPerson"
        }
      }
    }
  }
}